name: CI/CD Pipeline to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Authenticate to AWS ECR
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin 528757809157.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build Docker Image for x86_64
        run: docker build --platform linux/amd64 -t fitness-tracker-app .

      - name: Tag Docker Image
        run: docker tag fitness-tracker-app:latest 528757809157.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/fitness-tracker:latest

      - name: Push Docker Image to ECR
        run: docker push 528757809157.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/fitness-tracker:latest

  deploy:
    name: Deploy to AWS EC2
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: |
              ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Debug GitHub Secrets
        run: |
          echo "Checking if EC2_SSH_KEY is available..."
          if [ -z "$EC2_SSH_KEY" ]; then
            echo "❌ EC2_SSH_KEY is EMPTY or NOT FOUND!"
          else
            echo "✅ EC2_SSH_KEY is present, length: ${#EC2_SSH_KEY}"
            echo "First 10 characters: ${EC2_SSH_KEY:0:10}"
          fi
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

      - name: Debug Secrets Before SSH
        run: env | grep EC2



      - name: SSH into EC2 and Deploy Container
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: |
            ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Pulling latest image from ECR..."
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin 528757809157.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
            docker pull 528757809157.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/fitness-tracker:latest
            docker stop fitness-tracker-container || true
            docker rm fitness-tracker-container || true
            docker run -d --name fitness-tracker-container --network bridge -p 8080:8080 528757809157.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/fitness-tracker:latest